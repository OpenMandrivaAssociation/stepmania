--- StepMania-3.9-src/src/Actor.cpp.str	2009-02-07 20:05:16.000000000 +0100
+++ StepMania-3.9-src/src/Actor.cpp	2009-02-07 20:05:26.000000000 +0100
@@ -754,7 +754,7 @@
 	else
 	{
 		CString sError = ssprintf( "Actor::HandleCommand: Unrecognized command name '%s'.", sName.c_str() );
-		LOG->Warn( sError );
+		LOG->Warn( "%s",(const char *) sError );
 		Dialog::OK( sError );
 	}
 
--- StepMania-3.9-src/src/ActorCommands.cpp.str	2009-02-07 20:04:39.000000000 +0100
+++ StepMania-3.9-src/src/ActorCommands.cpp	2009-02-07 20:04:47.000000000 +0100
@@ -8,7 +8,7 @@
 {
 	const CString sError = ssprintf( "Actor::HandleCommand: Wrong number of parameters in command '%s'.  Expected %d but there are %u.",
 		command.GetOriginalCommandString().c_str(), iMaxIndexAccessed+1, unsigned(command.vTokens.size()) );
-	LOG->Warn( sError );
+	LOG->Warn( "%s",(const char *) sError );
 	Dialog::OK( sError );
 }
 
--- StepMania-3.9-src/src/RageBitmapTexture.cpp.str	2009-02-07 20:02:23.000000000 +0100
+++ StepMania-3.9-src/src/RageBitmapTexture.cpp	2009-02-07 20:02:35.000000000 +0100
@@ -276,7 +276,7 @@
 				fFrameWidth, fFrameHeight,
 				fBetterSourceWidth, fBetterSourceHeight,
 				fBetterFrameWidth, fBetterFrameHeight );
-			LOG->Warn( sWarning );
+			LOG->Warn("%s", (const char *) sWarning );
 			Dialog::OK( sWarning, "FRAME_DIMENSIONS_WARNING" );
 		}
 	}
--- StepMania-3.9-src/src/RageDisplay_OGL.cpp.str	2009-02-07 20:02:41.000000000 +0100
+++ StepMania-3.9-src/src/RageDisplay_OGL.cpp	2009-02-07 20:03:21.000000000 +0100
@@ -1730,7 +1730,7 @@
 				 ", format " << GLToString(glImageFormat) <<
 				 ", type " << GLToString(glImageType) <<
 				 "): " << gluErrorString(error);
-			LOG->Trace( s.str().c_str() );
+			LOG->Trace( "%s", (const char *) (s.str().c_str()) );
 
 			ASSERT(0);
 		}
@@ -1750,7 +1750,7 @@
 					", type " << GLToString(glImageType) <<
 					", pixfmt " << pixfmt <<
 					", imgpixfmt " << imgpixfmt;
-			LOG->Trace( s.str().c_str() );
+			LOG->Trace( "%s", (const char *) (s.str().c_str()) );
 		}
 		GLenum error = glGetError();
 		if( error != GL_NO_ERROR )
@@ -1763,7 +1763,7 @@
 				 ", pixfmt " << pixfmt <<
 				 ", imgpixfmt " << imgpixfmt <<
 				 "): " << GLToString(error);
-			LOG->Trace( s.str().c_str() );
+			LOG->Trace("%s", (const char *) (s.str().c_str()) );
 
 			ASSERT(0);
 		}
--- StepMania-3.9-src/src/RageMath.cpp.str	2009-02-07 20:03:40.000000000 +0100
+++ StepMania-3.9-src/src/RageMath.cpp	2009-02-07 20:03:58.000000000 +0100
@@ -257,7 +257,7 @@
 		else
 		{
 			CString sError = ssprintf( "MatrixCommand:  Unrecognized matrix command name '%s' in command string '%s'.", sName.c_str(), sCommandString.c_str() );
-			LOG->Warn( sError );
+			LOG->Warn( "%s", (const char *) sError );
 			Dialog::OK( sError );
 			continue;
 		}
@@ -266,7 +266,7 @@
 		if( iMaxIndexAccessed != (int)asTokens.size()-1 )
 		{
 			CString sError = ssprintf( "MatrixCommand:  Wrong number of parameters in command '%s'.  Expected %d but there are %d.", join(",",asTokens).c_str(), iMaxIndexAccessed+1, (int)asTokens.size() );
-			LOG->Warn( sError );
+			LOG->Warn( "%s", (const char *) sError );
 			Dialog::OK( sError );
 			continue;
 		}
--- StepMania-3.9-src/src/ScreenStyleSplash.cpp.str	2009-02-07 19:58:15.000000000 +0100
+++ StepMania-3.9-src/src/ScreenStyleSplash.cpp	2009-02-07 19:58:28.000000000 +0100
@@ -26,7 +26,7 @@
 	CString sGameName = GAMESTATE->GetCurrentGame()->m_szName;	
 	CString sStyleName = GAMESTATE->GetCurrentStyle()->m_szName;
 
-	LOG->Trace( ssprintf("ScreenStyleSplash: Displaying Splash for style: %s", sStyleName.c_str()));
+	LOG->Trace( "%s", (const char *) ssprintf("ScreenStyleSplash: Displaying Splash for style: %s", sStyleName.c_str()));
 
 	int iDifficulty = GAMESTATE->m_PreferredDifficulty[0];
 	if( GAMESTATE->m_bSideIsJoined[PLAYER_1] )
--- StepMania-3.9-src/src/Sprite.cpp.str	2009-02-07 20:05:58.000000000 +0100
+++ StepMania-3.9-src/src/Sprite.cpp	2009-02-07 20:06:07.000000000 +0100
@@ -105,7 +105,7 @@
 // BaseZoomZ=1
 bool Sprite::LoadFromSpriteFile( RageTextureID ID )
 {
-	LOG->Trace( ssprintf("Sprite::LoadFromSpriteFile(%s)", ID.filename.c_str()) );
+	LOG->Trace("%s", (const char *) ssprintf("Sprite::LoadFromSpriteFile(%s)", ID.filename.c_str()) );
 
 retry:
 
--- StepMania-3.9-src/src/StepMania.cpp.str	2009-02-07 19:59:12.000000000 +0100
+++ StepMania-3.9-src/src/StepMania.cpp	2009-02-07 19:59:25.000000000 +0100
@@ -555,7 +555,7 @@
 	// Video card changed since last run
 	CString sVideoDriver = GetVideoDriverName();
 	
-	LOG->Trace( "Last seen video driver: " + PREFSMAN->m_sLastSeenVideoDriver );
+	LOG->Trace("%s", (const char *) ("Last seen video driver: " + PREFSMAN->m_sLastSeenVideoDriver) );
 
 	const VideoCardDefaults* pDefaults = NULL;
 	
--- StepMania-3.9-src/src/arch/MemoryCard/MemoryCardDriverThreaded_Linux.cpp.str	2009-02-07 20:00:45.000000000 +0100
+++ StepMania-3.9-src/src/arch/MemoryCard/MemoryCardDriverThreaded_Linux.cpp	2009-02-07 20:00:55.000000000 +0100
@@ -531,7 +531,7 @@
 			
 			CString sOutput;
 			CString sCommand = "/usr/bin/sg_scan";
-			LOG->Trace( sCommand );
+			LOG->Trace( "%s", (const char *) sCommand );
 			RunProgram( sCommand, NULL, sOutput );
 			
 			CStringArray vsLines;
--- StepMania-3.9-src/src/archutils/Unix/CrashHandlerChild.cpp.str	2004-10-23 00:41:44.000000000 +0200
+++ StepMania-3.9-src/src/archutils/Unix/CrashHandlerChild.cpp	2009-02-07 19:55:28.000000000 +0100
@@ -318,7 +318,7 @@
 
     fprintf(CrashDump, "Checkpoints:\n");
     for (unsigned i=0; i<Checkpoints.size(); ++i)
-        fprintf(CrashDump, Checkpoints[i]);
+        fprintf(CrashDump, "%s", (const char *) (Checkpoints[i]));
     fprintf(CrashDump, "\n");
 
     for( int i = 0; i < CrashData::MAX_BACKTRACE_THREADS; ++i )
@@ -356,12 +356,13 @@
             "\n"
             PRODUCT_NAME " has crashed.  Debug information has been output to\n"
             "\n"
-            "    " + sCrashInfoPath + "\n"
+            "    %s\n"
             "\n"
             "Please report a bug at:\n"
             "\n"
             "    http://sourceforge.net/tracker/?func=add&group_id=37892&atid=421366\n"
-            "\n"
+            "\n",
+	    (const char *) sCrashInfoPath
             );
 #endif
 }

